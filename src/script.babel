class Editor extends React.Component {
  constructor(props){
    super(props);
    this.handleChange = props.handleChange;
  }
  
  render(){
    return(
      <div id="editorDiv">
        <div id="editorHeader" className="header">Editor</div>
        <textarea id="editor" value={this.props.editorValue} onChange={this.handleChange}></textarea>
      </div>
      
    );
  }
}

class Preview extends React.Component {
  constructor(props){
    super(props);
  }
  
  render(){
    return(
      <div id="previewDiv" className="mainDivs">
        <div className="header">Preview</div>
        <div id="preview" dangerouslySetInnerHTML={{__html: marked(this.props.editorValue, {breaks: true})}}>
        </div>
      </div>
    );
  }
}

class RootComponent extends React.Component {
  constructor(props){
    super(props);
    this.state = {
      editorValue: `# Header 
## Sub-header
[I'm an inline-style link to Google](https://www.google.com) 

Inline \`code\` has \`back-ticks around\` it.

\`\`\`
s = "Some Python code"
print(s)
\`\`\`
Here's a list:
* Item 1
* Item 2

> This is a blockquote

![alt text](https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSwcnmYsNR1l7UTbtwku9L4JxSUbLNdM6StLQ3s66bY4zK0h7yY&usqp=CAU "Dog")

Finally, some **bolded text**.`
    };
    this.handleChange = this.handleChange.bind(this);
  }
  
  handleChange(event) {
    this.setState({
      editorValue: event.target.value
    });
  }
  
  render(){
    return(
      <div id="mainDiv">
        <Editor editorValue={this.state.editorValue} handleChange={this.handleChange}/>
        <Preview editorValue={this.state.editorValue}/>
      </div>
    );
  }
}

ReactDOM.render(<RootComponent/>, document.getElementById('root'));